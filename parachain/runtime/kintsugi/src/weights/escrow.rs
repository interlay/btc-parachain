
//! Autogenerated weights for escrow
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2024-01-04, STEPS: `2`, REPEAT: `1`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `nakul-GF65-Thin-10UE`, CPU: `Intel(R) Core(TM) i7-10750H CPU @ 2.60GHz`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("kintsugi-dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/interbtc-parachain
// benchmark
// pallet
// --pallet
// *
// --extrinsic
// *
// --execution=wasm
// --wasm-execution=compiled
// --steps
// 2
// --repeat
// 1
// --template
// .deploy/runtime-weight-template.hbs
// --chain
// kintsugi-dev
// --output
// parachain/runtime/kintsugi/src/weights/

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weights for escrow using the Substrate node and recommended hardware.
pub struct WeightInfo<T>(PhantomData<T>);

impl<T: frame_system::Config> escrow::WeightInfo for WeightInfo<T> {

	/// Storage: Escrow Locked (r:1 w:1)
	/// Proof: Escrow Locked (max_values: None, max_size: Some(68), added: 2543, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: Escrow Blocks (r:1 w:0)
	/// Proof: Escrow Blocks (max_values: None, max_size: Some(49), added: 2524, mode: MaxEncodedLen)
	/// Storage: Escrow Limits (r:1 w:0)
	/// Proof: Escrow Limits (max_values: None, max_size: Some(56), added: 2531, mode: MaxEncodedLen)
	/// Storage: Tokens Locks (r:1 w:1)
	/// Proof: Tokens Locks (max_values: None, max_size: Some(1268), added: 3743, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Escrow SlopeChanges (r:54 w:1)
	/// Proof: Escrow SlopeChanges (max_values: None, max_size: Some(36), added: 2511, mode: MaxEncodedLen)
	/// Storage: Escrow Epoch (r:1 w:1)
	/// Proof: Escrow Epoch (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: Escrow PointHistory (r:1 w:52)
	/// Proof: Escrow PointHistory (max_values: None, max_size: Some(40), added: 2515, mode: MaxEncodedLen)
	/// Storage: Escrow UserPointEpoch (r:1 w:1)
	/// Proof: Escrow UserPointEpoch (max_values: None, max_size: Some(52), added: 2527, mode: MaxEncodedLen)
	/// Storage: EscrowRewards Stake (r:1 w:1)
	/// Proof: EscrowRewards Stake (max_values: None, max_size: Some(64), added: 2539, mode: MaxEncodedLen)
	/// Storage: EscrowRewards TotalStake (r:1 w:1)
	/// Proof: EscrowRewards TotalStake (max_values: None, max_size: Some(32), added: 2507, mode: MaxEncodedLen)
	/// Storage: EscrowRewards RewardCurrencies (r:1 w:0)
	/// Proof: EscrowRewards RewardCurrencies (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	/// Storage: EscrowRewards RewardTally (r:1 w:1)
	/// Proof: EscrowRewards RewardTally (max_values: None, max_size: Some(91), added: 2566, mode: MaxEncodedLen)
	/// Storage: EscrowRewards RewardPerToken (r:1 w:0)
	/// Proof: EscrowRewards RewardPerToken (max_values: None, max_size: Some(59), added: 2534, mode: MaxEncodedLen)
	/// Storage: Escrow UserPointHistory (r:0 w:1)
	/// Proof: Escrow UserPointHistory (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
	fn create_lock	() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1114`
		//  Estimated: `136584`
		// Minimum execution time: 962_478_000 picoseconds.
		Weight::from_parts(962_478_000, 136584)
			.saturating_add(T::DbWeight::get().reads(68_u64))
			.saturating_add(T::DbWeight::get().writes(63_u64))
	}
	/// Storage: Escrow Locked (r:1 w:1)
	/// Proof: Escrow Locked (max_values: None, max_size: Some(68), added: 2543, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: Escrow Blocks (r:1 w:0)
	/// Proof: Escrow Blocks (max_values: None, max_size: Some(49), added: 2524, mode: MaxEncodedLen)
	/// Storage: Escrow Limits (r:1 w:0)
	/// Proof: Escrow Limits (max_values: None, max_size: Some(56), added: 2531, mode: MaxEncodedLen)
	/// Storage: Tokens Locks (r:1 w:1)
	/// Proof: Tokens Locks (max_values: None, max_size: Some(1268), added: 3743, mode: MaxEncodedLen)
	/// Storage: Escrow SlopeChanges (r:1 w:1)
	/// Proof: Escrow SlopeChanges (max_values: None, max_size: Some(36), added: 2511, mode: MaxEncodedLen)
	/// Storage: Escrow Epoch (r:1 w:1)
	/// Proof: Escrow Epoch (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: Escrow PointHistory (r:1 w:1)
	/// Proof: Escrow PointHistory (max_values: None, max_size: Some(40), added: 2515, mode: MaxEncodedLen)
	/// Storage: Escrow UserPointEpoch (r:1 w:1)
	/// Proof: Escrow UserPointEpoch (max_values: None, max_size: Some(52), added: 2527, mode: MaxEncodedLen)
	/// Storage: EscrowRewards Stake (r:1 w:1)
	/// Proof: EscrowRewards Stake (max_values: None, max_size: Some(64), added: 2539, mode: MaxEncodedLen)
	/// Storage: EscrowRewards TotalStake (r:1 w:1)
	/// Proof: EscrowRewards TotalStake (max_values: None, max_size: Some(32), added: 2507, mode: MaxEncodedLen)
	/// Storage: EscrowRewards RewardCurrencies (r:1 w:0)
	/// Proof: EscrowRewards RewardCurrencies (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	/// Storage: EscrowRewards RewardTally (r:1 w:1)
	/// Proof: EscrowRewards RewardTally (max_values: None, max_size: Some(91), added: 2566, mode: MaxEncodedLen)
	/// Storage: EscrowRewards RewardPerToken (r:1 w:0)
	/// Proof: EscrowRewards RewardPerToken (max_values: None, max_size: Some(59), added: 2534, mode: MaxEncodedLen)
	/// Storage: Escrow UserPointHistory (r:0 w:1)
	/// Proof: Escrow UserPointHistory (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
	fn increase_amount	() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1703`
		//  Estimated: `4733`
		// Minimum execution time: 452_975_000 picoseconds.
		Weight::from_parts(452_975_000, 4733)
			.saturating_add(T::DbWeight::get().reads(14_u64))
			.saturating_add(T::DbWeight::get().writes(11_u64))
	}
	/// Storage: Escrow Locked (r:1 w:1)
	/// Proof: Escrow Locked (max_values: None, max_size: Some(68), added: 2543, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: Escrow Blocks (r:1 w:0)
	/// Proof: Escrow Blocks (max_values: None, max_size: Some(49), added: 2524, mode: MaxEncodedLen)
	/// Storage: Escrow Limits (r:1 w:0)
	/// Proof: Escrow Limits (max_values: None, max_size: Some(56), added: 2531, mode: MaxEncodedLen)
	/// Storage: Tokens Locks (r:1 w:1)
	/// Proof: Tokens Locks (max_values: None, max_size: Some(1268), added: 3743, mode: MaxEncodedLen)
	/// Storage: Escrow SlopeChanges (r:97 w:2)
	/// Proof: Escrow SlopeChanges (max_values: None, max_size: Some(36), added: 2511, mode: MaxEncodedLen)
	/// Storage: Escrow Epoch (r:1 w:1)
	/// Proof: Escrow Epoch (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: Escrow PointHistory (r:1 w:95)
	/// Proof: Escrow PointHistory (max_values: None, max_size: Some(40), added: 2515, mode: MaxEncodedLen)
	/// Storage: Escrow UserPointEpoch (r:1 w:1)
	/// Proof: Escrow UserPointEpoch (max_values: None, max_size: Some(52), added: 2527, mode: MaxEncodedLen)
	/// Storage: EscrowRewards Stake (r:1 w:1)
	/// Proof: EscrowRewards Stake (max_values: None, max_size: Some(64), added: 2539, mode: MaxEncodedLen)
	/// Storage: EscrowRewards TotalStake (r:1 w:1)
	/// Proof: EscrowRewards TotalStake (max_values: None, max_size: Some(32), added: 2507, mode: MaxEncodedLen)
	/// Storage: EscrowRewards RewardCurrencies (r:1 w:0)
	/// Proof: EscrowRewards RewardCurrencies (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	/// Storage: EscrowRewards RewardTally (r:1 w:1)
	/// Proof: EscrowRewards RewardTally (max_values: None, max_size: Some(91), added: 2566, mode: MaxEncodedLen)
	/// Storage: EscrowRewards RewardPerToken (r:1 w:0)
	/// Proof: EscrowRewards RewardPerToken (max_values: None, max_size: Some(59), added: 2534, mode: MaxEncodedLen)
	/// Storage: Escrow UserPointHistory (r:0 w:1)
	/// Proof: Escrow UserPointHistory (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
	fn increase_unlock_height	() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1703`
		//  Estimated: `244557`
		// Minimum execution time: 1_284_938_000 picoseconds.
		Weight::from_parts(1_284_938_000, 244557)
			.saturating_add(T::DbWeight::get().reads(110_u64))
			.saturating_add(T::DbWeight::get().writes(106_u64))
	}
	/// Storage: Escrow Locked (r:1 w:1)
	/// Proof: Escrow Locked (max_values: None, max_size: Some(68), added: 2543, mode: MaxEncodedLen)
	/// Storage: EscrowRewards Stake (r:1 w:1)
	/// Proof: EscrowRewards Stake (max_values: None, max_size: Some(64), added: 2539, mode: MaxEncodedLen)
	/// Storage: EscrowRewards TotalStake (r:1 w:1)
	/// Proof: EscrowRewards TotalStake (max_values: None, max_size: Some(32), added: 2507, mode: MaxEncodedLen)
	/// Storage: EscrowRewards RewardCurrencies (r:1 w:0)
	/// Proof: EscrowRewards RewardCurrencies (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	/// Storage: EscrowRewards RewardTally (r:1 w:1)
	/// Proof: EscrowRewards RewardTally (max_values: None, max_size: Some(91), added: 2566, mode: MaxEncodedLen)
	/// Storage: EscrowRewards RewardPerToken (r:1 w:0)
	/// Proof: EscrowRewards RewardPerToken (max_values: None, max_size: Some(59), added: 2534, mode: MaxEncodedLen)
	/// Storage: Escrow SlopeChanges (r:97 w:0)
	/// Proof: Escrow SlopeChanges (max_values: None, max_size: Some(36), added: 2511, mode: MaxEncodedLen)
	/// Storage: Escrow Epoch (r:1 w:1)
	/// Proof: Escrow Epoch (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: Escrow PointHistory (r:1 w:97)
	/// Proof: Escrow PointHistory (max_values: None, max_size: Some(40), added: 2515, mode: MaxEncodedLen)
	/// Storage: Escrow UserPointEpoch (r:1 w:1)
	/// Proof: Escrow UserPointEpoch (max_values: None, max_size: Some(52), added: 2527, mode: MaxEncodedLen)
	/// Storage: Tokens Locks (r:1 w:1)
	/// Proof: Tokens Locks (max_values: None, max_size: Some(1268), added: 3743, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Escrow UserPointHistory (r:1 w:2)
	/// Proof: Escrow UserPointHistory (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
	fn withdraw	() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1922`
		//  Estimated: `244557`
		// Minimum execution time: 2_031_904_000 picoseconds.
		Weight::from_parts(2_031_904_000, 244557)
			.saturating_add(T::DbWeight::get().reads(110_u64))
			.saturating_add(T::DbWeight::get().writes(108_u64))
	}
	/// Storage: Escrow Limits (r:0 w:1)
	/// Proof: Escrow Limits (max_values: None, max_size: Some(56), added: 2531, mode: MaxEncodedLen)
	fn set_account_limit	() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 41_067_000 picoseconds.
		Weight::from_parts(41_067_000, 0)
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Escrow Blocks (r:0 w:1)
	/// Proof: Escrow Blocks (max_values: None, max_size: Some(49), added: 2524, mode: MaxEncodedLen)
	fn set_account_block	() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 37_366_000 picoseconds.
		Weight::from_parts(37_366_000, 0)
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Escrow Locked (r:1 w:1)
	/// Proof: Escrow Locked (max_values: None, max_size: Some(68), added: 2543, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: Escrow Blocks (r:1 w:0)
	/// Proof: Escrow Blocks (max_values: None, max_size: Some(49), added: 2524, mode: MaxEncodedLen)
	/// Storage: Escrow Limits (r:1 w:0)
	/// Proof: Escrow Limits (max_values: None, max_size: Some(56), added: 2531, mode: MaxEncodedLen)
	/// Storage: Tokens Locks (r:1 w:1)
	/// Proof: Tokens Locks (max_values: None, max_size: Some(1268), added: 3743, mode: MaxEncodedLen)
	/// Storage: Escrow SlopeChanges (r:96 w:1)
	/// Proof: Escrow SlopeChanges (max_values: None, max_size: Some(36), added: 2511, mode: MaxEncodedLen)
	/// Storage: Escrow Epoch (r:1 w:1)
	/// Proof: Escrow Epoch (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: Escrow PointHistory (r:1 w:95)
	/// Proof: Escrow PointHistory (max_values: None, max_size: Some(40), added: 2515, mode: MaxEncodedLen)
	/// Storage: Escrow UserPointEpoch (r:1 w:1)
	/// Proof: Escrow UserPointEpoch (max_values: None, max_size: Some(52), added: 2527, mode: MaxEncodedLen)
	/// Storage: EscrowRewards Stake (r:1 w:1)
	/// Proof: EscrowRewards Stake (max_values: None, max_size: Some(64), added: 2539, mode: MaxEncodedLen)
	/// Storage: EscrowRewards TotalStake (r:1 w:1)
	/// Proof: EscrowRewards TotalStake (max_values: None, max_size: Some(32), added: 2507, mode: MaxEncodedLen)
	/// Storage: EscrowRewards RewardCurrencies (r:1 w:0)
	/// Proof: EscrowRewards RewardCurrencies (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	/// Storage: Escrow UserPointHistory (r:0 w:1)
	/// Proof: Escrow UserPointHistory (max_values: None, max_size: Some(88), added: 2563, mode: MaxEncodedLen)
	fn update_user_stake	() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1510`
		//  Estimated: `242046`
		// Minimum execution time: 1_144_947_000 picoseconds.
		Weight::from_parts(1_144_947_000, 242046)
			.saturating_add(T::DbWeight::get().reads(107_u64))
			.saturating_add(T::DbWeight::get().writes(104_u64))
	}
}